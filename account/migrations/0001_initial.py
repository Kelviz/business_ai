# Generated by Django 4.0.4 on 2023-09-01 14:57

from django.db import migrations, models
from django.contrib.auth.models import User
from generative_ai.models import BusinessAI
from account.models import UserAccount


class Migration(migrations.Migration):

    initial = True

    def transfer_user_data(apps, schema_editor):
        for old_user in User.objects.all():
            UserAccount.objects.create(
                id=old_user.id,
                email=old_user.email,
                first_name=old_user.first_name,
                last_name=old_user.last_name,
                is_superuser=True,
                is_staff=True,
                # Map other fields as needed
            )

            print(UserAccount)

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(
                    max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(
                    blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                 help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(
                    related_name='user_accounts', to='auth.group')),
                ('user_permissions', models.ManyToManyField(
                    related_name='user_accounts', to='auth.permission')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
